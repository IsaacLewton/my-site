{"version":3,"sources":["images/calc.jpg","images/book.jpg","NameHeader.js","Project.js","Body.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NameHeader","Project","props","className","src","img","alt","name","desc","Body","console","log","calc","href","book","Footer","download","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,6JCU5BC,MARf,WACI,OACI,6BACI,6CCQGC,MAXf,SAAiBC,GACb,OACI,yBAAKC,UAAY,cACb,yBAAKA,UAAY,aAAaC,IAAOF,EAAMG,IAAKC,IAAM,gDACtD,4BAAKJ,EAAMK,MACX,2BAAIL,EAAMM,Q,gCC+BPC,MAhCf,WAEI,OADAC,QAAQC,IAAIC,KAER,yBAAKT,UAAY,QACb,qCACA,4FAAiE,uBAAGU,KAAO,wBAAV,OAAjE,0UAOA,0DACA,yBAAKV,UAAY,YACb,kBAAC,EAAD,CACIE,IAAOO,IACPL,KAAQ,mBACRC,KAAQ,2HAEZ,kBAAC,EAAD,CACIH,IAAOS,IACPP,KAAQ,SACRC,KAAQ,yKAIhB,0CACA,oGAAyE,uBAAGK,KAAK,gCAAR,YAAzE,OCpBGE,MAXf,WACI,OACI,yBAAKZ,UAAY,UACb,4BACI,4BAAI,uBAAGU,KAAO,6BAA6BG,UAAQ,GAA/C,WACJ,4BAAI,uBAAGH,KAAO,kCAAV,cCSLI,MAVf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxB,QAAQwB,MAAMA,EAAMC,c","file":"static/js/main.994febfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calc.f0104f5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book.b1b630e1.jpg\";","import React from 'react'\r\n\r\nfunction NameHeader() {\r\n    return (\r\n        <div>\r\n            <h1>ISAAC LEWIS</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameHeader","import React from 'react'\r\n\r\nfunction Project(props) {\r\n    return (\r\n        <div className = 'ProjectBox'>\r\n            <img className = 'ProjectImg' src = {props.img} alt = 'An image corresponding to the project below' />\r\n            <h3>{props.name}</h3>\r\n            <p>{props.desc}</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Project","import React from 'react'\r\nimport Project from './Project'\r\n\r\nimport calc from './images/calc.jpg'\r\nimport book from './images/book.jpg'\r\n\r\nfunction Body() {\r\n    console.log(calc)\r\n    return(\r\n        <div className = 'Body'>\r\n            <h2>About</h2>\r\n            <p>Hi, welcome to my first website! My name is Isaac and I am an <a href = 'https://www.mst.edu/'>MST</a> graduate \r\n                living in Ewing, MO. \r\n                In my free time, I am learning about web development because it is by far the most interesting field of \r\n                computer science to me. This website was built using the skills I learned in school as well as those I \r\n                learned on my own. It's actually my first website! Lets look at what I used to get here.\r\n            </p>\r\n\r\n            <h2>Things I've Been A Part Of</h2>\r\n            <div className = 'Projects'>\r\n                <Project \r\n                    img = {calc} \r\n                    name = {'Calculator Squad'} \r\n                    desc = {'Me and four other students created two calculators in a semester, one using Qt Creator and C++, the other using React.'}\r\n                />\r\n                <Project \r\n                    img = {book} \r\n                    name = {'Li-Spy'} \r\n                    desc = {'In a group of eight, we collected data from the school library to keep a live count of the amount of people there. I worked on the website that displayed the data.'}\r\n                />\r\n            </div>\r\n\r\n            <h2>Contact Me</h2>\r\n            <p>Thanks for having a look. If you think I could help you, feel free to <a href=\"mailto:isaacwlewis@gmail.com\">email me</a>.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className = 'Footer'>\r\n            <ul>\r\n                <li><a href = './images/2020 Isaac Resume' download>Resume</a></li>\r\n                <li><a href = 'https://github.com/IsaacLewton'>Github</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport NameHeader from './NameHeader';\nimport Body from './Body';\nimport Footer from './Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NameHeader />\n      <Body />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}